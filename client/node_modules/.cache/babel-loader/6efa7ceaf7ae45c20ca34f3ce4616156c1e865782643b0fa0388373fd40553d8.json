{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Programming Projects\\\\SocialMediaAppV2\\\\client\\\\src\\\\components\\\\comments\\\\Comments.jsx\",\n  _s = $RefreshSig$();\nimport \"./comments.scss\";\nimport { useContext, useState } from \"react\";\nimport { AuthenticationContext } from \"../../context/authentication\";\nimport { makeRequest } from \"../../axios\";\nimport moment from \"moment\";\nimport { useQuery, useMutation, useQueryClient } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comments({\n  postId\n}) {\n  _s();\n  const {\n    currentUser\n  } = useContext(AuthenticationContext);\n  const [desc, setDesc] = useState(\"\");\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery([\"comments\"], () => makeRequest.get(\"/comments?postId=\" + postId).then(res => {\n    return res.data;\n  }));\n  const queryClient = useQueryClient();\n  const mutation = useMutation(newComment => {\n    return makeRequest.post(\"/comment\", newPost);\n  }, {\n    onSuccess: () => {\n      // Invalidate and refetch\n      queryClient.invalidateQueries([\"comments\"]);\n    }\n  });\n  const handleClick = async e => {\n    e.preventDefault();\n    mutation.mutate({\n      desc,\n      postId\n    });\n    setDesc(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentUser.profilePicture,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Write a comment ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), isLoading ? \"loading\" : data.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: comment.profilePicture,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"date\",\n        children: moment(comment.createdAt).fromNow()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Comments, \"6zYNkNJszTvUoJSVdY3CymoiNvg=\", false, function () {\n  return [useQuery, useQueryClient, useMutation];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useContext","useState","AuthenticationContext","makeRequest","moment","useQuery","useMutation","useQueryClient","jsxDEV","_jsxDEV","Comments","postId","_s","currentUser","desc","setDesc","isLoading","error","data","get","then","res","queryClient","mutation","newComment","post","newPost","onSuccess","invalidateQueries","handleClick","e","preventDefault","mutate","className","children","src","profilePicture","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","map","comment","name","createdAt","fromNow","_c","$RefreshReg$"],"sources":["D:/My Programming Projects/SocialMediaAppV2/client/src/components/comments/Comments.jsx"],"sourcesContent":["import \"./comments.scss\";\r\nimport { useContext, useState } from \"react\";\r\nimport { AuthenticationContext } from \"../../context/authentication\";\r\nimport { makeRequest } from \"../../axios\";\r\nimport moment from \"moment\";\r\nimport { useQuery, useMutation, useQueryClient } from \"react-query\";\r\n\r\nfunction Comments( {postId} ) {\r\n    const { currentUser } = useContext(AuthenticationContext);\r\n    const [desc, setDesc] = useState(\"\");\r\n\r\n    const { isLoading, error, data } = useQuery([\"comments\"], () =>\r\n    makeRequest.get(\"/comments?postId=\" + postId).then((res)=>{\r\n      return res.data;\r\n    })\r\n  );\r\n  const queryClient = useQueryClient()\r\n\r\n\r\n  const mutation = useMutation(\r\n    (newComment) => {\r\n      return makeRequest.post(\"/comment\", newPost);\r\n    },\r\n    {\r\n      onSuccess: () => {\r\n        // Invalidate and refetch\r\n        queryClient.invalidateQueries([\"comments\"]);\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleClick = async (e)=>{\r\n    e.preventDefault()\r\n\r\n    mutation.mutate({ desc, postId });\r\n    setDesc(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"comments\">\r\n        <div className=\"write\">\r\n            <img src={currentUser.profilePicture} alt=\"\" />\r\n            <input type=\"text\" placeholder=\"Write a comment ...\" />\r\n            <button>Send</button>\r\n        </div>\r\n        {isLoading ? \"loading\" : \r\n        data.map(comment => (\r\n            <div className=\"comment\">\r\n                <img src= {comment.profilePicture} alt=\"\"/>\r\n                <div className=\"info\">\r\n                    <span>{comment.name}</span>\r\n                    <p>{comment.desc}</p>\r\n                </div>\r\n                <span className=\"date\">{moment(comment.createdAt).fromNow()}</span>\r\n            </div>\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Comments"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}